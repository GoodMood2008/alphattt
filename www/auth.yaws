<erl module=auth_mod>

-compile(export_all).

out(A) ->
    Pid = web_agent_mgr:get_agent(A),
    yaws_rpc:handler_session(A#arg{state = {web_agent, Pid}}, {?MODULE, handle}).

handle({web_agent, Pid}, {call, is_login, _}, Session) ->
    IsLogin = web_agent:is_login(Pid),
    Response = json2:obj_from_list([{"value", IsLogin}]),
    {true, 0, Session, {response, Response}};

handle({web_agent, Pid}, {call, login, {array, [UserName, Password]}}, Session) ->
    Response = case web_agent:login(Pid, UserName, Password) of
                    ok ->
                        json2:obj_from_list([{"value", true},
                                             {"reason", ""}]);
                    Reason ->
                        json2:obj_from_list([{"value", false},
                                             {"reason", Reason}])
                end,
    {true, 0, Session, {response, Response}};

handle({web_agent, Pid}, {call, Func, _Args}, Session) ->
    io:format("auth unknown func call ~p, web_agent ~p~n", [Func, Pid]),
    {true, 0, Session, {response, "ok"}}. 

</erl>

