<erl module=auth_mod>
-include("session.hrl").

-compile(export_all).

out(A) ->
    yaws_rpc:handler_session(A, {?MODULE, handle}).

handle(_State, {call, Func, _Args}, undefined) ->
    {ok, Pid} = web_agent:start(),
    io:format("auth func ~p call before create session ~p~n", [Func, Pid]),
    {true, 0, #session{pid = pid_to_list(Pid)}, {response, "ok"}};
handle(_State, {call, create_session, _Args}, Session=#session{pid = Pid}) ->
    io:format("auth use exist session_pid = ~p~n", [Pid]),
    Json = json2:obj_from_list([{"value", true}]),
    {true, 0, Session, {response, Json}};
handle(_State, {call, is_login, _}, Session=#session{pid = Pid}) ->
    io:format("auth session_pid = ~p~n", [Pid]),
    Json = json2:obj_from_list([{"value", false}]),
    {true, 0, Session, {response, Json}}.    

</erl>

